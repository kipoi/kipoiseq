version: 2

variables:
  update_conda: &update_conda
    run:
      name: Update conda
      command: conda update --yes conda
  create_env: &create_env
    run:
      name: create env
      command: |
        conda create -n kipoi-dev python=3.6
  install_git_lfs: &install_git_lfs
    run:
      name: Install git-lfs
      command: |
        source activate kipoi-dev
        conda install --yes -c conda-forge git-lfs
        cp .circleci/gitconfig ~/.gitconfig
  update_pytorch: &update_pytorch
    run:
      name: Update pytorch
      command: |
        source activate kipoi-dev
        conda install --yes pytorch-cpu -c pytorch
  icondaall_pip_deps: &install_pip_deps
    run:
      name: Install pip dependencies
      command: |
        source activate kipoi-dev
        pip install genomelake --no-deps
        pip install pyfaidx
  install_conda_deps: &install_conda_deps
    run:
      name: Install conda dependencies
      command: |
        source activate kipoi-dev
        apt-get update -y
        apt-get install build-essential -y
        conda install -y cython
        conda install -y -c bioconda cyvcf2 pybedtools genomelake pyfaidx biopython
  install_kipoi: &install_kipoi
    run:
      name: Install Kipoi
      command: |
        source activate kipoi-dev
        git clone git@github.com:kipoi/kipoi.git kipoi_pkg
        cd kipoi_pkg
        pip install '.'
        cd ..
  install_kipoiseq: &install_kipoiseq
    run:
      name: Install kipoiseq
      command: |
        source activate kipoi-dev
        pip install '.[develop]'
  install_requests: &install_requests
    run:
      name: Install requirements for requests correctly
      command: |
        source activate kipoi-dev
        pip install requests
  kipoi_ls: &kipoi_ls
    run:
      name: List kipoi packages
      command: |
        source activate kipoi-dev
        kipoi ls
  run_tests: &run_tests
    run:
      name: Run tests
      command: |
        source activate kipoi-dev
        mkdir test-reports
        py.test --cov=kipoiseq/ tests/ -n 1 --no-cov-on-fail --junitxml=test-reports/junit.xml
  run_coveralls: &run_coveralls
    run:
      name: run coveralls
      command: |
        source activate kipoi-dev
        coveralls || true
  store_test_results: &store_test_results
    store_test_results:
      path: test-reports
  store_test_artifacts: &store_test_artifacts
    store_artifacts:
      path: test-reports
      destination: test-reports
  # deployment
  build_pypi_package: &build_pypi_package
    run:
      name: build python packages
      command: |
        source activate kipoi-dev
        python setup.py sdist bdist_wheel
  conda_install_twine: &conda_install_twine
    run:
      name: Install twine
      command: conda install -y -c conda-forge twine importlib-metadata keyring keyrings.alt rfc3986
  pypi_create_pypirc: &pypi_create_pypirc
    run:
      name: init .pypirc
      command: |
        echo -e "[distutils]" >> ~/.pypirc
        echo -e "index-servers = " >> ~/.pypirc
        echo -e "    pypi" >> ~/.pypirc
        echo -e "    testpypi" >> ~/.pypirc
        echo -e "" >> ~/.pypirc
        echo -e "[testpypi]" >> ~/.pypirc
        echo -e "repository: https://test.pypi.org/legacy/" >> ~/.pypirc
        echo -e "username: $TEST_PYPI_USERNAME" >> ~/.pypirc
        echo -e "password: $TEST_PYPI_PASSWORD" >> ~/.pypirc
        echo -e "[pypi]" >> ~/.pypirc
        echo -e "username: $PYPI_USERNAME" >> ~/.pypirc
        echo -e "password: $PYPI_PASSWORD" >> ~/.pypirc


jobs:
  test-py36:
    docker:
      - image: continuumio/miniconda3:4.7.10
    working_directory: ~/repo
    steps:
      - checkout
      - *update_conda
      - *create_env
      - *update_pytorch
      - *install_conda_deps
      - *install_kipoi
      - *install_kipoiseq
      - *kipoi_ls
      - *run_tests
      - *run_coveralls
      - *store_test_results
      - *store_test_artifacts

  build-deploy-docs:
    docker:
      - image: continuumio/miniconda3:4.7.10
    working_directory: ~/repo
    steps:
      - add_ssh_keys:
          fingerprints:
            - e3:44:16:ec:72:df:ae:59:82:c2:ee:57:4a:52:71:aa
      - checkout
      - *update_conda
      - *create_env
      - *install_conda_deps
      - *install_kipoi
      - *install_kipoiseq
      - run:
          name: Install build deps
          command: |
            source activate kipoi-dev
            pip install nbconvert mkdocs git+https://github.com/kipoi/pydoc-markdown@master
      - run:
          name: Build docs
          command: |
            source activate kipoi-dev
            cd docs/
            mkdir -p theme_dir/img/ipynb/
            ./render_ipynb.bash
            pydocmd build
      - run:
          name: Deploy docs
          command: |
            source activate kipoi-dev
            .circleci/deploy_docs.bash

  test-deploy-pypi:
    docker:
      - image: continuumio/miniconda3:4.7.10
    working_directory: ~/repo
    steps:
      - checkout
      - *update_conda
      - *create_env
      - *update_pytorch
      - *install_conda_deps
      - *install_kipoi
      - *install_kipoiseq
      - *kipoi_ls
      - *build_pypi_package
      - *conda_install_twine
      - *pypi_create_pypirc
      - run:
          name: check if commit is tagged
          command: git describe --exact-match --tags HEAD && echo "commit is tagged; continuing" || circleci step halt
      - run:
          name: upload to TestPyPI
          command: twine upload --repository testpypi dist/* --verbose
      - run:
          name: pip install from TestPyPI
          command: |
            source activate kipoi-dev
            python -m pip install --user --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple kipoi --verbose
            python -c "import kipoi; print(kipoi.__version__)"

  productive-deploy-pypi:
    docker:
      - image: continuumio/miniconda3:4.7.10
    working_directory: ~/repo
    steps:
      - checkout
      - *update_conda
      - *create_env
      - *update_pytorch
      - *install_conda_deps
      - *install_kipoi
      - *install_kipoiseq
      - *kipoi_ls
      - *build_pypi_package
      - *conda_install_twine
      - *pypi_create_pypirc
      - run:
          name: check if commit is tagged
          command: git describe --exact-match --tags HEAD && echo "commit is tagged; continuing" || circleci step halt
      - run:
          name: upload to PyPI
          command: twine upload --repository pypi dist/* --verbose
      - run:
          name: pip install from PyPI
          command: |
            source activate kipoi-dev
            python -m pip install --user kipoi --verbose
            python -c "import kipoi; print(kipoi.__version__)"


workflows:
  version: 2
  test-n-deploy:
    jobs:
      - test-py36
      - build-deploy-docs:
          requires:
            - test-py36
          filters:
            branches:
              only:
                - master
                - test_deployment_script
      - test-deploy-pypi:
          requires:
            - test-py36
          context:
            - pypi_kipoibot
          filters:
#            tags:
#              only: /^v.*/
            branches:
              only:
                - test_deployment_pypi
                - test_deployment_script
      - productive-deploy-pypi:
          requires:
            - test-py36
          context:
            - pypi_kipoibot
          filters:
#            # Trigger only on a tagged commit starting with v.
#            # https://circleci.com/docs/2.0/workflows/#executing-workflows-for-a-git-tag
#            tags:
#              only: /^v.*/
            branches:
              only:
                - master
